// This is your Prisma schema file
// Learn more about it at https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // You can change this to mysql, sqlite, etc.
  url      = env("DATABASE_URL")
}

model User {
  id                 String              @id @default(uuid())
  email              String              @unique
  name               String?
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  financialData      FinancialData?
  historicalData     HistoricalData[]
  financialDecisions FinancialDecision[]
  scenarioConfigs    ScenarioConfig[]

  @@map("users")
}

model FinancialData {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Income
  monthlySalary   Float @default(0)
  freelanceIncome Float @default(0)

  // Expenses
  rent          Float @default(0)
  utilities     Float @default(0)
  groceries     Float @default(0)
  subscriptions Float @default(0)
  miscellaneous Float @default(0)

  // Debt
  totalDebt  Float @default(0)
  monthlyEMI Float @default(0)

  // Savings
  emergencyFund     Float @default(0)
  otherSavings      Float @default(0)
  sipMonthly        Float @default(0)
  lumpSumInvestment Float @default(0)

  // Financial Health Score
  overallScore              Int?
  emergencyFundScore        Int?
  debtRatioScore            Int?
  investmentAllocationScore Int?

  // Relations
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("financial_data")
}

model HistoricalData {
  id        String   @id @default(uuid())
  month     DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Income
  monthlySalary   Float @default(0)
  freelanceIncome Float @default(0)

  // Expenses
  rent          Float @default(0)
  utilities     Float @default(0)
  groceries     Float @default(0)
  subscriptions Float @default(0)
  miscellaneous Float @default(0)

  // Debt
  totalDebt  Float @default(0)
  monthlyEMI Float @default(0)

  // Savings
  emergencyFund     Float @default(0)
  otherSavings      Float @default(0)
  sipMonthly        Float @default(0)
  lumpSumInvestment Float @default(0)

  // Relations
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, month])
  @@map("historical_data")
}

model FinancialDecision {
  id                String   @id @default(uuid())
  title             String
  amount            Float
  date              DateTime
  category          String
  alternativeOption String?
  expectedReturn    Float?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // Relations
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("financial_decisions")
}

model ScenarioConfig {
  id                  String   @id @default(uuid())
  name                String
  newRent             Float?
  jobSwitchSalary     Float?
  sipInvestment       Float?
  expenseGrowthRate   Float?
  projectionTimeframe Int
  oneTimeExpense      Float?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  // Relations
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("scenario_configs")
}
